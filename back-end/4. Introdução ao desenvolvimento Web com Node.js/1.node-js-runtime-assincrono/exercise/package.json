{
  "name": "my-scripts",
  "version": "1.0.0",
  "description": "<div class=\"c-kWDhvw\"><article class=\"c-daJEgu\"><h1> Exerc√≠cios - agora, a pr√°tica</h1> <blockquote>   <p> üöÄ <em>Se liga nesse foguete!</em>  </p>   <p> Os exerc√≠cios destacados com üöÄ s√£o os fundamentais pra voc√™ ir bem no projeto! Todos os exerc√≠cios v√£o contribuir com sua forma√ß√£o mas fique de olho nesses! üëÄ  </p> </blockquote> <p> Antes de come√ßar, crie uma nova pasta e dentro dela, crie um pacote Node.js com o comando <code class=\"inline\">npm init</code>. Este pacote ser√° chamado <code class=\"inline\">my-scripts</code>. Realize os exerc√≠cios dentro desse pacote.</p> </article><article class=\"c-daJEgu\"><h2> Exerc√≠cio 1</h2> <p> üöÄ Crie um c√≥digo para calcular o √≠ndice de massa corporal(IMC) de uma pessoa.</p> <blockquote>   <p> OBS: a sigla IMC, traduzida para o ingl√™s, equivale a BMI(Body Mass Index). Vamos adotar este padr√£o nos c√≥digos para come√ßarmos a nos acostumar com o formato que aparecer√° no mercado de trabalho!  </p> </blockquote> <ul>   <li>     <p> Armazene o c√≥digo no arquivo <code class=\"inline\">bmi.js</code>.    </p>   </li>   <li>     <p> A f√≥rmula para calcular o IMC √©:    </p>     <table>       <thead>         <tr>           <th style=\"text-align: center;\">             <img src=\"https://content-assets.betrybe.com/prod/56b1963d-d603-422d-a103-5305ed3a3aba-F%C3%B3rmula%20do%20IMC.png\" alt=\"F√≥rmula do IMC\">           </th>         </tr>       </thead>       <tbody>         <tr>           <td style=\"text-align: center;\"> F√≥rmula do IMC          </td>         </tr>       </tbody>     </table>     <ul>       <li> <strong>Obs:</strong> Lembre-se que a altura √© em metros, caso deseje usar em cent√≠metros a convers√£o para metros ser√° necess√°ria.      </li>     </ul>   </li>   <li>     <p> Comece criando um novo pacote Node com <code class=\"inline\">npm init</code> e respondendo √†s perguntas do <code class=\"inline\">npm</code>.    </p>   </li>   <li>     <p> Por enquanto, n√£o se preocupe em pedir <em>input</em> do usu√°rio. Utilize valores fixos para <code class=\"inline\">weight</code> e <code class=\"inline\">height</code>.    </p>   </li> </ul> <h2> Exerc√≠cio 2</h2> <p> üöÄ Agora, permita que o c√≥digo seja executado atrav√©s do comando <code class=\"inline\">npm run bmi</code>.</p> <ul>   <li> O novo c√≥digo criado deve conter o comando que chama o <code class=\"inline\">node</code> para executar o arquivo <code class=\"inline\">bmi.js</code>.  </li> </ul> <h2> Exerc√≠cio 3</h2> <p> üöÄ Chegou a hora de tornar nosso c√≥digo mais interativo! Vamos adicionar inputs de entrada para quem usar.</p> <ul>   <li> Edite o c√≥digo para que os valores de <code class=\"inline\">weight</code> e <code class=\"inline\">height</code> sejam informados pela pessoa ao responder as perguntas: ‚ÄúWhat‚Äôs your weight?‚Äù e ‚ÄúWhat‚Äôs your height?‚Äù.  Deve-se utilizar o pacote <code class=\"inline\">readline-sync</code>.  </li> </ul> <h2> Exerc√≠cio 4</h2> <p> üöÄ Agora temos um problema, o <code class=\"inline\">peso</code> n√£o √© um n√∫mero inteiro! Isso quer dizer que precisamos mudar um pouco a forma como solicitamos o input desse dado.</p> <ul>   <li> O pacote <code class=\"inline\">readline-sync</code> possui uma fun√ß√£o espec√≠fica para tratar esses casos. Consulte a <a target=\"_blank\" href=\"https://www.npmjs.com/package/readline-sync#utility_methods\">documenta√ß√£o</a> do pacote e encontre a fun√ß√£o adequada para realizar input de valores <strong>float</strong>.  </li>   <li> Encontrou a fun√ß√£o? Show! Agora utilize-a para solicitar o input de <code class=\"inline\">weight</code>.  </li> </ul> <h2> Exerc√≠cio 5</h2> <p> üöÄ Vamos sofisticar um pouco mais nosso exerc√≠cio. Al√©m de imprimir o IMC na tela, imprima tamb√©m em qual categoria da tabela abaixo aquele IMC se enquadra:</p> <ul>   <li>     <p> Considere a seguinte tabela para classificar a situa√ß√£o do IMC:    </p>     <table>       <thead>         <tr>           <th style=\"text-align: left;\"> IMC          </th>           <th style=\"text-align: left;\"> Situa√ß√£o          </th>         </tr>       </thead>       <tbody>         <tr>           <td style=\"text-align: left;\"> Abaixo de 18,5          </td>           <td style=\"text-align: left;\"> Abaixo do peso (magreza)          </td>         </tr>         <tr>           <td style=\"text-align: left;\"> Entre 18,5 e 24,9          </td>           <td style=\"text-align: left;\"> Peso normal          </td>         </tr>         <tr>           <td style=\"text-align: left;\"> Entre 25,0 e 29,9          </td>           <td style=\"text-align: left;\"> Acima do peso (sobrepeso)          </td>         </tr>         <tr>           <td style=\"text-align: left;\"> Entre 30,0 e 34,9          </td>           <td style=\"text-align: left;\"> Obesidade grau I          </td>         </tr>         <tr>           <td style=\"text-align: left;\"> Entre 35,0 e 39,9          </td>           <td style=\"text-align: left;\"> Obesidade grau II          </td>         </tr>         <tr>           <td style=\"text-align: left;\"> 40,0 e acima          </td>           <td style=\"text-align: left;\"> Obesidade graus III e IV          </td>         </tr>       </tbody>     </table>   </li> </ul> </article><article class=\"c-daJEgu\"><h2> Exerc√≠cio 6</h2> <p> üöÄ Realize o download <a target=\"_blank\" href=\"https://lms-assets.betrybe.com/lms/simpsons.json\">deste arquivo</a> e salve-o como <code class=\"inline\">simpsons.json</code>. Utilize o arquivo baixado para realizar os requisitos abaixo.</p> <blockquote>   <p> Utilize <code class=\"inline\">async/await</code> para escrever seu c√≥digo. Procure n√£o utilizar callbacks.  </p> </blockquote> <p> A - Crie uma fun√ß√£o que leia todos os dados do arquivo e imprima cada personagem no formato <code class=\"inline\">id - Nome</code>. Por exemplo: <code class=\"inline\">1 - Homer Simpson</code>.</p> <p> B - Crie uma fun√ß√£o que receba o <code class=\"inline\">id</code> de uma personagem como par√¢metro e retorne uma <code class=\"inline\">Promise</code> que √© resolvida com os dados da personagem que possui o <code class=\"inline\">id</code> informado. Caso n√£o haja uma personagem com o <code class=\"inline\">id</code> informado, rejeite a Promise com o motivo ‚Äúid n√£o encontrado‚Äù.</p> <p> C - Crie uma fun√ß√£o que altere o arquivo <code class=\"inline\">simpsons.json</code> retirando os personagens com <code class=\"inline\">id</code> 10 e 6.</p> <p> D - Crie uma fun√ß√£o que leia o arquivo <code class=\"inline\">simpsons.json</code> e crie um novo arquivo, chamado <code class=\"inline\">simpsonFamily.json</code>, contendo as personagens com <code class=\"inline\">id</code> de 1 a 4.</p> <p> E - Crie uma fun√ß√£o que adicione ao arquivo <code class=\"inline\">simpsonFamily.json</code> o personagem <code class=\"inline\">Nelson Muntz</code>.</p> <p> F - Crie uma fun√ß√£o que substitua o personagem <code class=\"inline\">Nelson Muntz</code> pela personagem <code class=\"inline\">Maggie Simpson</code> no arquivo <code class=\"inline\">simpsonFamily.json</code>.</p> </article>",
  "main": "bmi.js",
  "scripts": {
    "bmi": "node bmi.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "readline-sync": "^1.4.10"
  }
}
